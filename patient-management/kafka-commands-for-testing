
1. docker exec -it kafka kafka-console-producer.sh --broker-list kafka:9092 --topic test-topic
   - **Explanation**: 
     This command is used to start a Kafka producer inside a running Docker container. The producer is used to send messages to a specific Kafka topic.
     - `docker exec -it kafka`: Executes a command in the running container named 'kafka'. The `-it` option enables interactive mode with a terminal session.
     - `kafka-console-producer.sh`: This is a built-in Kafka script that allows us to produce (send) messages to Kafka topics.
     - `--broker-list kafka:9092`: Specifies the Kafka broker's address and port. Here, `kafka:9092` refers to the broker running inside the Docker container (using `kafka` as the container name or hostname and port `9092`).
     - `--topic test-topic`: Specifies the Kafka topic to which the messages will be sent. In this case, it's `test-topic`.

2. docker exec -it kafka kafka-topics.sh --create --topic test-topic --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1
   - **Explanation**:
     This command is used to create a new Kafka topic inside the running Kafka Docker container.
     - `docker exec -it kafka`: Executes the command in the Kafka container.
     - `kafka-topics.sh`: This is a built-in Kafka script used for topic management, such as creating, listing, and deleting topics.
     - `--create`: This option indicates that you are creating a new topic.
     - `--topic test-topic`: Specifies the name of the topic to be created. In this case, the topic is `test-topic`.
     - `--bootstrap-server kafka:9092`: The address of the Kafka broker to connect to, specified as `kafka:9092`.
     - `--partitions 1`: Specifies the number of partitions for the new topic. Here, only one partition is created.
     - `--replication-factor 1`: Specifies the replication factor, which defines how many copies of the topicâ€™s data will be maintained across Kafka brokers. Here, it is set to 1 (no replication).

3. docker exec -it kafka kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic test-topic --from-beginning
   - **Explanation**:
     This command is used to start a Kafka consumer inside a Docker container. The consumer is used to read messages from a specific Kafka topic.
     - `docker exec -it kafka`: Executes the command in the Kafka container.
     - `kafka-console-consumer.sh`: This is a Kafka script used to consume (read) messages from a Kafka topic.
     - `--bootstrap-server kafka:9092`: The address of the Kafka broker to connect to, specified as `kafka:9092`.
     - `--topic test-topic`: Specifies the Kafka topic to consume messages from. In this case, it is `test-topic`.
     - `--from-beginning`: This option tells the consumer to read messages starting from the very beginning of the topic, instead of reading only the new messages that arrive after the consumer starts.

